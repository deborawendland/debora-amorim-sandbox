plugins {
    id 'application'
    id 'java'
}

mainClassName="com.deborawendland.cloud.tema08.app.MainRunner"

group 'com.deborawendland.cloud.tema08'
version '1.0-SNAPSHOT'

def karyonVersion = '2.9.2'
def springVersion = "5.2.2.RELEASE"


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.inject:guice:4.2.2'
    compile group: 'com.netflix.karyon', name: 'karyon2-governator', version: '2.9.2'
    compile group: 'com.netflix.governator', name: 'governator', version: '1.17.10'
    compile group: 'com.netflix.karyon', name: 'karyon2-admin-healthcheck-plugin', version: karyonVersion
    compile group: 'io.reactivex', name: 'rxjava', version: '1.0.2'
    compile group: 'io.netty', name: 'netty-all', version: '4.1.45.Final'

    compile([
             'org.springframework:spring-core:' + springVersion,
             'org.springframework:spring-context:' + springVersion,
             'org.springframework:spring-beans:' + springVersion,
             'org.springframework:spring-test:' + springVersion,
             'org.slf4j:slf4j-api:1.7.6',
             'org.slf4j:slf4j-simple:1.7.6',
             'org.codehaus.jettison:jettison:1.2',
             'com.netflix.karyon:karyon2-core:' + karyonVersion,
             'com.netflix.karyon:karyon2-jersey-blocking:' + karyonVersion,
             'com.netflix.karyon:karyon2-archaius:' + karyonVersion,
             'com.netflix.karyon:karyon2-servo:' + karyonVersion,
             'com.netflix.karyon:karyon2-admin-web:' + karyonVersion,
             'com.netflix.karyon:karyon2-eureka:' + karyonVersion,
             'com.netflix.karyon:karyon2-admin:' + karyonVersion,
             'javax.annotation:javax.annotation-api:1.2-b01',
             'javax.ws.rs:javax.ws.rs-api:2.0.1',
             'org.codehaus.jettison:jettison:1.2',
             'io.reactivex:rxnetty:0.4.20',

    ])
    testCompile group: 'junit' , name: 'junit', version: '4.12'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    archiveName = "calculator.jar"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}